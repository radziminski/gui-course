{"version":3,"sources":["utils.js","components/DayCell.js","components/Navbar.js","components/Calendar.js","views/Home.js","components/TextInput.js","components/Button.js","components/TimeInput.js","views/Event.js","components/EventCard.js","components/SectionTitle.js","views/Day.js","views/Footer.js","App.js","index.js"],"names":["MONTH_NAMES","getMonthStringFromDate","date","getMonth","dateToString","getDate","getFullYear","addDaysToDate","daysAmount","setDate","digitToTwoCharString","time","timeString","toString","length","compareDates","dateA","dateB","Day","props","className","onClick","data-isactive","active","children","Navbar","onLeftClick","title","onRightClick","weekDays","withRouter","defaultDate","match","params","Date","useState","currDate","setCurrDate","daysWithEvents","setDaysWithEvents","useEffect","axios","get","then","data","JSON","parse","events","map","el","id","Id","description","Description","catch","err","console","error","alert","onDayClicked","e","day","target","innerText","month","year","getAttribute","history","push","getTime","onMonthChanged","offset","newMonth","setFullYear","setMonth","days","getDay","daysRows","daysInWeek","dayCounter","hasEvent","find","event","today","sunday","generateDays","i","key","Home","TextInput","defaultValue","text","setText","label","type","onChange","value","Button","classTypes","join","TimeInput","default","getHours","hours","setHours","getMinutes","minutes","setMinutes","addToTimeValue","addValue","limit","newTime","input","change","newHours","newMinutes","retDate","defaultTime","setDescription","setTime","isLoading","setIsLoading","reqUrl","getFormData","FormData","set","updateEvent","put","headers","addNewEvent","post","sendBtnText","inputs","onSubmit","preventDefault","EventCard","onDelete","onEdit","descriptionRender","slice","toTimeString","SectionTitle","setEvents","getEventsFromCurrDate","deleteEvent","delete","renderedEvents","Footer","defaults","baseURL","App","path","component","Event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f798657.chunk.js","sourcesContent":["const MONTH_NAMES = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nexport const getMonthStringFromDate = (date) => {\n    return MONTH_NAMES[date.getMonth()];\n};\n\nexport const dateToString = (date) =>\n    `${date.getDate()} ${getMonthStringFromDate(date)} ${date.getFullYear()}`;\n\nexport const addDaysToDate = (date, daysAmount) => {\n    date.setDate(date.getDate() + daysAmount);\n};\n\nexport const digitToTwoCharString = (time) => {\n    let timeString = time.toString();\n    if (timeString.length === 1) return '0' + timeString;\n    return timeString;\n};\n\nexport const compareDates = (dateA, dateB) => {\n    if (\n        dateA.getDate() !== dateB.getDate() ||\n        dateA.getMonth() !== dateB.getMonth() ||\n        dateA.getFullYear() !== dateB.getFullYear()\n    )\n        return false;\n    return true;\n};\n","import React from 'react';\n\nconst Day = (props) => {\n    return (\n        <div className={props.className} onClick={props.onClick} data-isactive={props.active}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Day;\n","import React from 'react';\nimport { IoIosArrowDropleft, IoIosArrowDropright } from 'react-icons/io';\n\nconst Navbar = (props) => {\n    return (\n        <div className=\"calendar__navbar\">\n            <div className=\"calendar__arrow\" onClick={props.onLeftClick}>\n                <IoIosArrowDropleft className=\"calendar__icon\" />\n            </div>\n            <h1 className=\"calendar__title\">{props.title}</h1>\n            <div className=\"calendar__arrow\" onClick={props.onRightClick}>\n                <IoIosArrowDropright className=\"calendar__icon\" />\n            </div>\n        </div>\n    );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport { getMonthStringFromDate, addDaysToDate, compareDates } from '../utils';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport Day from './DayCell';\nimport Navbar from './Navbar';\n\nconst weekDays = ['Mon', 'Tue', 'Wen', 'Thu', 'Fri', 'Sat', 'Sun'];\n\nexport const Calendar = (props) => {\n    // If user goes back from not current month\n    const defaultDate = props.match.params.date\n        ? new Date(props.match.params.date * 1) // * 1 used to convert to int\n        : new Date();\n\n    // State\n    const [currDate, setCurrDate] = useState(defaultDate);\n    const [daysWithEvents, setDaysWithEvents] = useState([]);\n\n    // Getting all events once after component mounts\n    useEffect(() => {\n        axios\n            .get('/api/events')\n            .then((data) => data.data.data)\n            .then((data) => JSON.parse(data)) // data comes in serialized json\n            .then((data) => {\n                const events = data.map((el) => {\n                    return {\n                        id: el.Id,\n                        description: el.Description,\n                        date: new Date(el.Date),\n                    };\n                });\n                setDaysWithEvents(events);\n            })\n            .catch((err) => {\n                if (props.match.params.date)\n                    console.error('Could not connect to the server.\\n', err);\n                else\n                    alert(\n                        'Sorry, something went wrong while connecting to server. Please make sure that the server is properly running.\\n' +\n                            err\n                    );\n            });\n        // disablaing message since its a method used in other places too\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Function creating days visible in given month\n    const generateDays = (events = []) => {\n        const days = [];\n        const date = new Date(currDate);\n        date.setDate(1);\n\n        // Starting from some days from previous month:\n        while (date.getDay() !== 1) date.setDate(date.getDate() - 1);\n\n        // Generating the days:\n        const daysRows = 6;\n        const daysInWeek = 7;\n        let dayCounter = 0;\n        while (dayCounter < daysRows * daysInWeek) {\n            // Adding hasEvent flag to know if daay needs to be blue\n            let hasEvent = false;\n            if (events.find((el) => compareDates(el.date, date))) hasEvent = true;\n\n            days.push({\n                date: date.getDate(),\n                active: date.getMonth() === currDate.getMonth(),\n                event: hasEvent,\n                today: compareDates(date, new Date()),\n                sunday: date.getDay() === 0,\n            });\n\n            // Moving to next day\n            addDaysToDate(date, 1);\n            dayCounter++;\n        }\n        return days;\n    };\n\n    // If days is clicked going to day view\n    const onDayClicked = (e) => {\n        // Defining date\n        const day = e.target.innerText;\n        let month = currDate.getMonth();\n        let year = currDate.getFullYear();\n\n        // Cases where date from other month was clicked\n        if (e.target.getAttribute('data-isactive') === 'false') {\n            if (day > 20) month--;\n            else month++;\n        }\n\n        // Cases where date from other year was clicked\n        if (month > 11) {\n            month = 0;\n            year++;\n        }\n        if (month < 0) {\n            month = 11;\n            year--;\n        }\n\n        // Switching view with React Router\n        props.history.push(`/day/${new Date(year, month, day).getTime()}`);\n    };\n\n    // Handling if month has been changed by arrow on navbar\n    const onMonthChanged = (offset) => {\n        const date = new Date(currDate);\n        let newMonth = date.getMonth() + offset;\n\n        // Handling if year was changed\n        if (newMonth > 11) {\n            newMonth = 0;\n            date.setFullYear(date.getFullYear() + 1);\n        }\n        if (newMonth < 0) {\n            newMonth = 11;\n            date.setFullYear(date.getFullYear() - 1);\n        }\n        date.setMonth(newMonth);\n\n        setCurrDate(date);\n    };\n\n    // Creating days DOM elements\n    const days = generateDays(daysWithEvents).map(({ date, active, event, today, sunday }, i) => (\n        <Day\n            key={i}\n            className={`calendar__day ${!active ? 'calendar__day--ghost' : ''} ${\n                event ? 'calendar__day--event' : ''\n            } ${today ? 'calendar__day--today' : ''} ${sunday ? 'calendar__day--red' : ''}`}\n            onClick={onDayClicked}\n            active={active}\n        >\n            {date}\n        </Day>\n    ));\n\n    return (\n        <div className=\"calendar\">\n            <Navbar\n                onLeftClick={() => onMonthChanged(-1)}\n                onRightClick={() => onMonthChanged(1)}\n                title={`${getMonthStringFromDate(currDate)} ${currDate.getFullYear()}`}\n            />\n            <ul className=\"calendar__week-days\">\n                {weekDays.map((el, id) => (\n                    <li key={id} className=\"calendar__week-day\">\n                        {el}\n                    </li>\n                ))}\n            </ul>\n            <div className=\"calendar__days-box\">{days}</div>\n        </div>\n    );\n};\n\nexport default withRouter(Calendar);\n","import React from 'react';\nimport Calendar from '../components/Calendar';\n\nconst Home = () => {\n    return (\n        <section className=\"home-view\">\n            <Calendar />\n        </section>\n    );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\n\nconst TextInput = (props) => {\n    // State\n    const [text, setText] = useState(props.defaultValue || '');\n\n    // On text input\n    const onChange = (e) => {\n        setText(e.target.value);\n        if (props.onChange) props.onChange(e.target.value);\n    };\n\n    // In case event is edited, text might be supplied\n    useEffect(() => {\n        setText(props.defaultValue);\n    }, [props.defaultValue]);\n\n    return (\n        <div className=\"text-input\">\n            <label className=\"text-input__label\">{props.label}</label>\n            <textarea className=\"text-input__input\" type=\"text\" onChange={onChange} value={text} />\n        </div>\n    );\n};\n\nexport default TextInput;\n","import React from 'react';\n\nconst Button = (props) => {\n    let className = 'btn';\n    // Handling style types\n    if (props.classTypes) className += ' btn--' + props.classTypes.join(' btn--');\n\n    // Handling form types\n    if (props.type)\n        return (\n            <button type={props.type} className={className} onClick={props.onClick}>\n                {props.children}\n            </button>\n        );\n\n    return (\n        <button className={className} onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React, { useState, useEffect } from 'react';\nimport { digitToTwoCharString } from '../utils';\nimport { IoMdArrowDropup, IoMdArrowDropdown } from 'react-icons/io';\n\nconst TimeInput = (props) => {\n    // State (storing time in ints instead of Date for simplisity of calculations)\n    const [hours, setHours] = useState(props.default.getHours());\n    const [minutes, setMinutes] = useState(props.default.getMinutes());\n\n    // If default time is supplied (in case od edit event)\n    useEffect(() => {\n        setHours(props.default.getHours());\n        setMinutes(props.default.getMinutes());\n    }, [props.default]);\n\n    // Utility function for calculationg proper time value (not exceding 24 or 60)\n    const addToTimeValue = (time, addValue, limit) => {\n        const newTime = time + addValue;\n        if (newTime > limit) return newTime - limit - 1;\n        if (newTime < 0) return limit + newTime + 1;\n\n        return newTime;\n    };\n\n    // On time input\n    const onChange = (input, change) => {\n        const hoursInDay = 23;\n        const minutesInHours = 59;\n\n        let newHours = hours;\n        let newMinutes = minutes;\n\n        if (input === 'hours') {\n            newHours = addToTimeValue(hours, change, hoursInDay);\n            setHours(newHours);\n        } else {\n            newMinutes = addToTimeValue(minutes, change, minutesInHours);\n            setMinutes(newMinutes);\n        }\n\n        // Updating state as well as parent\n        const retDate = new Date();\n        retDate.setHours(newHours, newMinutes, 0, 0);\n        props.onChange(retDate);\n    };\n\n    return (\n        <div className=\"time-input\">\n            <h2 className=\"time-input__label\">{props.label}</h2>\n\n            <div className=\"time-input__time-box\">\n                <div className=\"time-input__input\">{digitToTwoCharString(hours)}</div>\n                <div className=\"time-input__btns-box\">\n                    <button\n                        type=\"button\"\n                        className=\"time-input__btn\"\n                        onClick={() => onChange('hours', 1)}\n                    >\n                        <IoMdArrowDropup className=\"time-input__icon time-input__icon--up\" />\n                    </button>\n\n                    <button\n                        type=\"button\"\n                        className=\"time-input__btn\"\n                        onClick={() => onChange('hours', -1)}\n                    >\n                        <IoMdArrowDropdown className=\"time-input__icon time-input__icon--down\" />\n                    </button>\n                </div>\n\n                <div className=\"time-input__input\">{digitToTwoCharString(minutes)}</div>\n                <div className=\"time-input__btns-box\">\n                    <button\n                        type=\"button\"\n                        className=\"time-input__btn\"\n                        onClick={() => onChange('minutes', 1)}\n                    >\n                        <IoMdArrowDropup className=\"time-input__icon time-input__icon--up\" />\n                    </button>\n\n                    <button\n                        type=\"button\"\n                        className=\"time-input__btn\"\n                        onClick={() => onChange('minutes', -1)}\n                    >\n                        <IoMdArrowDropdown className=\"time-input__icon time-input__icon--down\" />\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TimeInput;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport TextInput from '../components/TextInput';\nimport { dateToString } from '../utils';\nimport Button from '../components/Button';\nimport TimeInput from '../components/TimeInput';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nconst Event = (props) => {\n    // Route Params\n    // Getting proper params from route\n    const currDate = props.match.params.date ? new Date(props.match.params.date * 1) : new Date();\n\n    // id is supplied only if event is edited\n    const id = props.match.params.id || null;\n\n    // Default time is 00:00\n    const defaultTime = new Date();\n    defaultTime.setHours(0, 0, 0, 0);\n\n    // State\n    const [description, setDescription] = useState(props.description || '');\n    const [time, setTime] = useState(defaultTime);\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Used only if id is supplied - event is edited - getting fresh event data from server\n    useEffect(() => {\n        if (id) {\n            const reqUrl = `/api/event/${id}`;\n            setIsLoading(true);\n            axios\n                .get(reqUrl)\n                .then((data) => JSON.parse(data.data.data))\n                .then((data) => {\n                    setDescription(data.Description);\n                    const newTime = new Date(data.Date);\n                    setTime(newTime);\n                    setIsLoading(false);\n                })\n                .catch((err) => {\n                    alert(\n                        'Sorry, event with given id does not exist. Please make sure that the server is properly running.'\n                    );\n                    setIsLoading(false);\n                    props.history.push('/home');\n                });\n        }\n    }, [id, props.history]);\n\n    // Updateing/Adding new event on server\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (id) return updateEvent(id);\n        addNewEvent();\n    };\n\n    // Creating content type form for POST or PUT requests\n    const getFormData = () => {\n        //int Year, int Month, int Day, int Hours, int Minutes, string Description\n        const data = new FormData();\n        data.set('Year', currDate.getFullYear());\n        data.set('Month', currDate.getMonth() + 1);\n        data.set('Day', currDate.getDate());\n        data.set('Hours', time.getHours());\n        data.set('Minutes', time.getMinutes());\n        data.set('Description', description);\n        return data;\n    };\n\n    // Sending PUT request for event update\n    const updateEvent = (id) => {\n        const reqUrl = `/api/updateevent/${id}`;\n        const data = getFormData();\n        setIsLoading(true);\n        axios\n            .put(reqUrl, data, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            })\n            .then((data) => {\n                setIsLoading(false);\n                props.history.push(`/day/${currDate.getTime()}`);\n            })\n            .catch((err) => {\n                alert(\n                    'Something went wrong while sending the request. Please check if server is running properly.'\n                );\n                setIsLoading(false);\n                props.history.push('/home');\n            });\n    };\n\n    // Sending POST request for event creation\n    const addNewEvent = () => {\n        const reqUrl = `/api/addevent`;\n        const data = getFormData();\n        setIsLoading(true);\n        axios\n            .post(reqUrl, data, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            })\n            .then((data) => {\n                setIsLoading(false);\n                props.history.push(`/day/${currDate.getTime()}`);\n            })\n            .catch((err) => {\n                alert(\n                    'Something went wrong while sending the request. Please check if server is running properly.'\n                );\n                setIsLoading(false);\n                props.history.push('/home');\n            });\n    };\n\n    const title = id ? 'Editing Event' : 'New Event';\n    const sendBtnText = id ? 'Update' : 'Send';\n\n    let inputs = (\n        <Fragment>\n            <TimeInput label=\"Time: \" onChange={setTime} default={time} />\n            <TextInput onChange={setDescription} label=\"Description: \" defaultValue={description} />\n        </Fragment>\n    );\n    if (isLoading) inputs = <div>Loading...</div>;\n\n    return (\n        <section className=\"event-view\">\n            <h1 className=\"section-title\">\n                {title} on {dateToString(currDate)}\n            </h1>\n            <form className=\"event-view__form\" onSubmit={onSubmit}>\n                {inputs}\n\n                <div className=\"event-view__btns\">\n                    <Button type=\"submit\" classTypes={['green']}>\n                        {sendBtnText}\n                    </Button>\n                    <Button\n                        classTypes={['red']}\n                        onClick={() => props.history.push(`/day/${currDate.getTime()}`)}\n                    >\n                        Cancel\n                    </Button>\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default withRouter(Event);\n","import React from 'react';\nimport Button from './Button';\n\nconst EventCard = ({ id, date, description, onDelete, onEdit }) => {\n    const descriptionRender =\n        description.length > 15 ? description.slice(0, 14) + '...' : description;\n    return (\n        <div className=\"event-card\">\n            <div className=\"event-card__time\">{date.toTimeString().slice(0, 5)}</div>\n            <div className=\"event-card__description\">{descriptionRender}</div>\n            <div className=\"event-card__btns\">\n                <Button onClick={onEdit}>Edit</Button>\n                <Button classTypes={['red']} onClick={() => onDelete(id)}>\n                    Delete\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default EventCard;\n","import React from 'react';\n\nconst SectionTitle = ({ children }) => {\n    return <h1 className=\"section-title\">{children}</h1>;\n};\n\nexport default SectionTitle;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { dateToString, digitToTwoCharString } from '../utils';\nimport EventCard from '../components/EventCard';\nimport Button from '../components/Button';\nimport SectionTitle from '../components/SectionTitle';\n\nconst Day = (props) => {\n    // Route Params\n    const currDate = new Date(props.match.params.date * 1);\n\n    // State\n    const [events, setEvents] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    // Getting events for given day from server\n    const getEventsFromCurrDate = () => {\n        const reqUrl = `/api/events/${currDate.getFullYear()}-${digitToTwoCharString(\n            currDate.getMonth() + 1\n        )}-${digitToTwoCharString(currDate.getDate())}/`;\n\n        axios\n            .get(reqUrl)\n            .then((data) => data.data.data)\n            .then((data) => JSON.parse(data))\n            .then((data) => {\n                const events = data.map((el) => {\n                    return {\n                        id: el.Id,\n                        description: el.Description,\n                        date: new Date(el.Date),\n                    };\n                });\n                setEvents(events);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                alert(\n                    'Sorry, something went wrong while connecting to server. Please make sure that the server is properly running.\\n' +\n                        err\n                );\n                props.history.push(`/home/${currDate.getTime()}`);\n            });\n    };\n\n    // Getting events as component mounts\n    useEffect(() => {\n        getEventsFromCurrDate();\n        // disablaing message since its a method used in other places too\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const deleteEvent = (id) => {\n        const reqUrl = `/api/deleteevent/${id}`;\n        setIsLoading(true);\n        axios\n            .delete(reqUrl)\n            .then((data) => {\n                setIsLoading(false);\n                getEventsFromCurrDate();\n            })\n            .catch((err) => {\n                alert(\n                    'Sorry, something went wrong delete request. Please make sure that the server is properly running.'\n                );\n                setIsLoading(false);\n                props.history.push('/home');\n            });\n    };\n\n    // In case there are no events proper message is displayed\n    let renderedEvents = <div className=\"day-view__msg\">There are no events on this day.</div>;\n\n    // In case server fetch is in progress\n    if (isLoading) renderedEvents = <div>Loading...</div>;\n\n    // In case there are some events, they are mapped into event cards\n    if (events.length > 0)\n        renderedEvents = events.map((el, i) => (\n            <EventCard\n                key={i}\n                id={el.id}\n                date={el.date}\n                description={el.description}\n                onDelete={deleteEvent}\n                onEdit={() => props.history.push(`/event/${el.date.getTime()}/${el.id}`)}\n            />\n        ));\n\n    return (\n        <section className=\"day-view\">\n            <SectionTitle>Events on {dateToString(currDate)}</SectionTitle>\n\n            <div className=\"day-view__events-box\">{renderedEvents}</div>\n            <div className=\"day-view__btns\">\n                <Button onClick={() => props.history.push(`/event/${currDate.getTime()}`)}>\n                    Add New\n                </Button>\n                <Button\n                    classTypes={['red']}\n                    onClick={() => props.history.push(`/home/${currDate.getTime()}`)}\n                >\n                    Back\n                </Button>\n            </div>\n        </section>\n    );\n};\n\nexport default withRouter(Day);\n","import React from 'react';\n\nconst Footer = () => {\n    return <footer className=\"footer\">&copy; Created by Jan Radziminski</footer>;\n};\n\nexport default Footer;\n","import React from 'react';\nimport './assets/css/style.css';\nimport Home from './views/Home';\nimport Event from './views/Event';\nimport Day from './views/Day';\nimport Footer from './views/Footer';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n////////////////////////////////////////////\n//////// CREATED BY JAN RADZIMINSKI ////////\n////////////////////////////////////////////\n\n// AXIOS CONFIG\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\naxios.defaults.baseURL = 'http://localhost:3000/';\n\n// App Render\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Switch>\n                    <Route path=\"/day/:date\" component={Day} />\n                    <Route path=\"/event/:date/:id?\" component={Event} />\n                    <Route path=\"/home/:date?\" component={Home} />\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n                <Footer />\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}