{"ast":null,"code":"var _jsxFileName = \"/home/janek/Desktop/EGUI/lab3/calendar/src/components/Calendar.js\";\nimport React, { useState } from 'react';\nimport { getMonthStringFromDate, addDaysToDate } from '../utils';\nimport { IoIosArrowDropleft, IoIosArrowDropright } from 'react-icons/io';\nexport const Calendar = props => {\n  const [currDate, setCurrDate] = useState(props.currDate);\n  const [daysWithEvents, setDaysWithEvents] = useState([]);\n\n  const generateDays = () => {\n    const days = [];\n    const date = new Date(currDate);\n    date.setDate(1); // Starting from some days from previous month:\n\n    while (date.getDay() !== 1) date.setDate(date.getDate() - 1); // Generating the days:\n\n\n    const daysRows = 6;\n    const daysInWeek = 7;\n    let dayCounter = 0;\n\n    while (dayCounter < daysRows * daysInWeek) {\n      days.push({\n        date: date.getDate(),\n        active: date.getMonth() === currDate.getMonth()\n      });\n      addDaysToDate(date, 1);\n      dayCounter++;\n    }\n\n    return days;\n  };\n\n  const onDayClicked = e => {\n    const day = e.target.innerText;\n    const date = currDate;\n    date.setDate(day);\n\n    if (e.target.classList.length > 1) {\n      if (day > 20) date.setMonth(date.getMonth() - 1);else date.setMonth(date.getMonth() + 1);\n    }\n\n    props.switchView('day', date);\n  };\n\n  const onMonthChanged = offset => {\n    const date = new Date(currDate);\n    let newMonth = date.getMonth() + offset;\n\n    if (newMonth > 11) {\n      newMonth = 0;\n      date.setFullYear(date.getFullYear() + 1);\n    }\n\n    if (newMonth < 0) {\n      newMonth = 11;\n      date.setFullYear(date.getFullYear() - 1);\n    }\n\n    date.setMonth(newMonth);\n    setCurrDate(date);\n  };\n\n  const days = generateDays(currDate).map(({\n    date,\n    active\n  }, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: `calendar__day ${!active ? 'calendar__day--ghost' : ''}`,\n    onClick: onDayClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, date));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar__navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar__arrow\",\n    onClick: () => onMonthChanged(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"L\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"calendar__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, getMonthStringFromDate(currDate)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar__arrow\",\n    onClick: () => onMonthChanged(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"R\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar__days-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, days));\n};\nexport default Calendar;","map":{"version":3,"sources":["/home/janek/Desktop/EGUI/lab3/calendar/src/components/Calendar.js"],"names":["React","useState","getMonthStringFromDate","addDaysToDate","IoIosArrowDropleft","IoIosArrowDropright","Calendar","props","currDate","setCurrDate","daysWithEvents","setDaysWithEvents","generateDays","days","date","Date","setDate","getDay","getDate","daysRows","daysInWeek","dayCounter","push","active","getMonth","onDayClicked","e","day","target","innerText","classList","length","setMonth","switchView","onMonthChanged","offset","newMonth","setFullYear","getFullYear","map","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { getMonthStringFromDate, addDaysToDate } from '../utils';\nimport { IoIosArrowDropleft, IoIosArrowDropright } from 'react-icons/io';\n\nexport const Calendar = (props) => {\n    const [currDate, setCurrDate] = useState(props.currDate);\n    const [daysWithEvents, setDaysWithEvents] = useState([]);\n\n    const generateDays = () => {\n        const days = [];\n        const date = new Date(currDate);\n        date.setDate(1);\n        // Starting from some days from previous month:\n        while (date.getDay() !== 1) date.setDate(date.getDate() - 1);\n\n        // Generating the days:\n        const daysRows = 6;\n        const daysInWeek = 7;\n\n        let dayCounter = 0;\n        while (dayCounter < daysRows * daysInWeek) {\n            days.push({\n                date: date.getDate(),\n                active: date.getMonth() === currDate.getMonth(),\n            });\n            addDaysToDate(date, 1);\n            dayCounter++;\n        }\n        return days;\n    };\n\n    const onDayClicked = (e) => {\n        const day = e.target.innerText;\n        const date = currDate;\n        date.setDate(day);\n        if (e.target.classList.length > 1) {\n            if (day > 20) date.setMonth(date.getMonth() - 1);\n            else date.setMonth(date.getMonth() + 1);\n        }\n        props.switchView('day', date);\n    };\n\n    const onMonthChanged = (offset) => {\n        const date = new Date(currDate);\n        let newMonth = date.getMonth() + offset;\n        if (newMonth > 11) {\n            newMonth = 0;\n            date.setFullYear(date.getFullYear() + 1);\n        }\n        if (newMonth < 0) {\n            newMonth = 11;\n            date.setFullYear(date.getFullYear() - 1);\n        }\n        date.setMonth(newMonth);\n\n        setCurrDate(date);\n    };\n\n    const days = generateDays(currDate).map(({ date, active }, i) => (\n        <div\n            key={i}\n            className={`calendar__day ${!active ? 'calendar__day--ghost' : ''}`}\n            onClick={onDayClicked}\n        >\n            {date}\n        </div>\n    ));\n\n    return (\n        <div className=\"calendar\">\n            <div className=\"calendar__navbar\">\n                <div className=\"calendar__arrow\" onClick={() => onMonthChanged(-1)}>\n                    L\n                </div>\n                <h1 className=\"calendar__title\">{getMonthStringFromDate(currDate)}</h1>\n                <div className=\"calendar__arrow\" onClick={() => onMonthChanged(1)}>\n                    R\n                </div>\n            </div>\n            <div className=\"calendar__days-box\">{days}</div>\n        </div>\n    );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}