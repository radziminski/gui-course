{"ast":null,"code":"var _jsxFileName = \"/home/janek/Desktop/EGUI/lab3/calendar/src/components/Calendar.js\";\nimport React, { useState } from 'react';\nimport { getMonthStringFromDate, addDaysToDate } from '../utils';\nexport const Calendar = props => {\n  const [currDate, setCurrDate] = useState(props.currDate);\n  const [daysWithEvents, setDaysWithEvents] = useState([]);\n\n  const generateDays = date => {\n    const days = [];\n    const currDate = new Date(this.state.currDate);\n    currDate.setDate(1); // Starting from some days from previous month:\n\n    while (currDate.getDay() !== 1) currDate.setDate(currDate.getDate() - 1); // Generating the days:\n\n\n    const daysRows = 6;\n    const daysInWeek = 7;\n    let dayCounter = 0;\n\n    while (dayCounter < daysRows * daysInWeek) {\n      days.push({\n        date: currDate.getDate(),\n        active: currDate.getMonth() === this.state.currDate.getMonth()\n      });\n      addDaysToDate(currDate, 1);\n      dayCounter++;\n    }\n\n    return days;\n  };\n\n  const onDayClicked = e => {\n    const day = e.target.innerText;\n    const date = this.state.currDate;\n    date.setDate(day);\n\n    if (e.target.classList.length > 1) {\n      if (day > 20) date.setMonth(date.getMonth() - 1);else date.setMonth(date.getMonth() + 1);\n    }\n\n    this.props.switchView('day', date);\n  };\n\n  const onMonthChanged = offset => {\n    const date = new Date(this.state.currDate);\n    let newMonth = date.getMonth() + offset;\n\n    if (newMonth > 11) {\n      newMonth = 0;\n      date.setFullYear(date.getFullYear() + 1);\n    }\n\n    if (newMonth < 0) {\n      newMonth = 11;\n      date.setFullYear(date.getFullYear() - 1);\n    }\n\n    date.setMonth(newMonth);\n    this.setState({\n      currDate: date\n    });\n  };\n\n  const days = this.generateDays(this.state.currDate).map(({\n    date,\n    active\n  }, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    className: `calendar__day ${!active ? 'calendar__day--ghost' : ''}`,\n    onClick: this.onDayClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, date));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar__navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar__arrow\",\n    onClick: () => this.onMonthChanged(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"L\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"calendar__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, getMonthStringFromDate(this.state.currDate)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar__arrow\",\n    onClick: () => this.onMonthChanged(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"R\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar__days-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, days));\n};\nexport default Calendar;","map":{"version":3,"sources":["/home/janek/Desktop/EGUI/lab3/calendar/src/components/Calendar.js"],"names":["React","useState","getMonthStringFromDate","addDaysToDate","Calendar","props","currDate","setCurrDate","daysWithEvents","setDaysWithEvents","generateDays","date","days","Date","state","setDate","getDay","getDate","daysRows","daysInWeek","dayCounter","push","active","getMonth","onDayClicked","e","day","target","innerText","classList","length","setMonth","switchView","onMonthChanged","offset","newMonth","setFullYear","getFullYear","setState","map","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { getMonthStringFromDate, addDaysToDate } from '../utils';\n\nexport const Calendar = (props) => {\n    const [currDate, setCurrDate] = useState(props.currDate);\n    const [daysWithEvents, setDaysWithEvents] = useState([]);\n\n    const generateDays = (date) => {\n        const days = [];\n        const currDate = new Date(this.state.currDate);\n        currDate.setDate(1);\n        // Starting from some days from previous month:\n        while (currDate.getDay() !== 1) currDate.setDate(currDate.getDate() - 1);\n\n        // Generating the days:\n        const daysRows = 6;\n        const daysInWeek = 7;\n\n        let dayCounter = 0;\n        while (dayCounter < daysRows * daysInWeek) {\n            days.push({\n                date: currDate.getDate(),\n                active: currDate.getMonth() === this.state.currDate.getMonth(),\n            });\n            addDaysToDate(currDate, 1);\n            dayCounter++;\n        }\n        return days;\n    };\n\n    const onDayClicked = (e) => {\n        const day = e.target.innerText;\n        const date = this.state.currDate;\n        date.setDate(day);\n        if (e.target.classList.length > 1) {\n            if (day > 20) date.setMonth(date.getMonth() - 1);\n            else date.setMonth(date.getMonth() + 1);\n        }\n        this.props.switchView('day', date);\n    };\n\n    const onMonthChanged = (offset) => {\n        const date = new Date(this.state.currDate);\n        let newMonth = date.getMonth() + offset;\n        if (newMonth > 11) {\n            newMonth = 0;\n            date.setFullYear(date.getFullYear() + 1);\n        }\n        if (newMonth < 0) {\n            newMonth = 11;\n            date.setFullYear(date.getFullYear() - 1);\n        }\n        date.setMonth(newMonth);\n\n        this.setState({\n            currDate: date,\n        });\n    };\n\n    const days = this.generateDays(this.state.currDate).map(({ date, active }, i) => (\n        <div\n            key={i}\n            className={`calendar__day ${!active ? 'calendar__day--ghost' : ''}`}\n            onClick={this.onDayClicked}\n        >\n            {date}\n        </div>\n    ));\n\n    return (\n        <div className=\"calendar\">\n            <div className=\"calendar__navbar\">\n                <div className=\"calendar__arrow\" onClick={() => this.onMonthChanged(-1)}>\n                    L\n                </div>\n                <h1 className=\"calendar__title\">{getMonthStringFromDate(this.state.currDate)}</h1>\n                <div className=\"calendar__arrow\" onClick={() => this.onMonthChanged(1)}>\n                    R\n                </div>\n            </div>\n            <div className=\"calendar__days-box\">{days}</div>\n        </div>\n    );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}