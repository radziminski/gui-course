{"ast":null,"code":"var _jsxFileName = \"/home/janek/Desktop/EGUI/gui-course/React.js/development/frontend/src/views/Day.js\";\nimport React, { useState, useEffect } from 'react';\nimport { dateToString } from '../utils';\nimport EventCard from '../components/EventCard';\nimport Button from '../components/Button';\nimport axios from 'axios';\n\nconst Day = props => {\n  const [events, setEvents] = useState([{\n    date: new Date(),\n    description: 'lalalala'\n  }, {\n    date: new Date(),\n    description: 'lelelele'\n  }, {\n    date: new Date(),\n    description: 'lilililil'\n  }]);\n  useEffect(() => {\n    axios.get(`http://localhost:3000/api/events/${props.currDate.getFullYear()}-${props.currDate.getMonth()}-${props.currDate.getDate()}/`).then(data => data.data.data).then(data => JSON.parse(data)).then(data => {\n      const events = data.map(el => {\n        return {\n          id: el.Id,\n          description: el.Description,\n          date: new Date(el.Date)\n        };\n      });\n      setEvents(events);\n    });\n  }, []);\n  const {\n    switchView,\n    currDate\n  } = props;\n  const renderedEvents = events.map((el, i) => /*#__PURE__*/React.createElement(EventCard, {\n    key: i,\n    date: el.date,\n    description: el.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"day-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Events on \", dateToString(currDate)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"day-view__events-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, renderedEvents), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"day-view__btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => switchView('event', currDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Add New\"), /*#__PURE__*/React.createElement(Button, {\n    classTypes: ['red'],\n    onClick: () => switchView('home', currDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Back\")));\n};\n\nexport default Day;","map":{"version":3,"sources":["/home/janek/Desktop/EGUI/gui-course/React.js/development/frontend/src/views/Day.js"],"names":["React","useState","useEffect","dateToString","EventCard","Button","axios","Day","props","events","setEvents","date","Date","description","get","currDate","getFullYear","getMonth","getDate","then","data","JSON","parse","map","el","id","Id","Description","switchView","renderedEvents","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { dateToString } from '../utils';\nimport EventCard from '../components/EventCard';\nimport Button from '../components/Button';\nimport axios from 'axios';\n\nconst Day = (props) => {\n    const [events, setEvents] = useState([\n        {\n            date: new Date(),\n            description: 'lalalala',\n        },\n        {\n            date: new Date(),\n            description: 'lelelele',\n        },\n        {\n            date: new Date(),\n            description: 'lilililil',\n        },\n    ]);\n\n    useEffect(() => {\n        axios\n            .get(\n                `http://localhost:3000/api/events/${props.currDate.getFullYear()}-${props.currDate.getMonth()}-${props.currDate.getDate()}/`\n            )\n            .then((data) => data.data.data)\n            .then((data) => JSON.parse(data))\n            .then((data) => {\n                const events = data.map((el) => {\n                    return {\n                        id: el.Id,\n                        description: el.Description,\n                        date: new Date(el.Date),\n                    };\n                });\n                setEvents(events);\n            });\n    }, []);\n\n    const { switchView, currDate } = props;\n    const renderedEvents = events.map((el, i) => (\n        <EventCard key={i} date={el.date} description={el.description} />\n    ));\n    return (\n        <section className=\"day-view\">\n            <h1 className=\"section-title\">Events on {dateToString(currDate)}</h1>\n            <div className=\"day-view__events-box\">{renderedEvents}</div>\n            <div className=\"day-view__btns\">\n                <Button onClick={() => switchView('event', currDate)}>Add New</Button>\n                <Button classTypes={['red']} onClick={() => switchView('home', currDate)}>\n                    Back\n                </Button>\n            </div>\n        </section>\n    );\n};\n\nexport default Day;\n"]},"metadata":{},"sourceType":"module"}