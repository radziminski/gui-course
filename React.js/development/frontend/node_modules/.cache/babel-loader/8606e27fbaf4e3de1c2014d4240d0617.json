{"ast":null,"code":"var _jsxFileName = \"/home/janek/Desktop/EGUI/gui-course/React.js/development/frontend/src/views/Event.js\";\nimport React, { useState } from 'react';\nimport TextInput from '../components/TextInput';\nimport { dateToString } from '../utils';\nimport Button from '../components/Button';\nimport TimeInput from '../components/TimeInput';\nimport axios from 'axios';\n\nconst Event = props => {\n  const defaultTime = new Date();\n  defaultTime.setHours(0, 0, 0, 0);\n  const [descirption, setDescription] = useState(props.descirption);\n  const [time, setTime] = useState(defaultTime);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log('submit');\n    console.log(time.getHours(), time.getMinutes());\n    console.log(descirption);\n    addNewEvent();\n  };\n\n  const addNewEvent = () => {\n    //int Year, int Month, int Day, int Hours, int Minutes, string Description\n    const reqUrl = `http://localhost:3000/api/addevent`;\n    const data = {\n      Year: currDate.getFullYear(),\n      Month: currDate.getMonth(),\n      Day: currDate.getDate(),\n      Hours: time.getHours(),\n      Minutes: time.getMinutes(),\n      Description: descirption\n    };\n    const {\n      currDate\n    } = props;\n    console.log(dataToSend);\n    axios.post(reqUrl, data).then(data => {\n      console.log(data);\n      props.switchView('day', currDate);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"event-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"New Event on \", dateToString(props.currDate)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"event-view__form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimeInput, {\n    label: \"Time: \",\n    onChange: setTime,\n    default: time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    onChange: setDescription,\n    label: \"Description: \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"event-view__btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    classTypes: ['green'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n    classTypes: ['red'],\n    onClick: () => props.switchView('day', props.currDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Cancel\"))));\n};\n\nexport default Event;","map":{"version":3,"sources":["/home/janek/Desktop/EGUI/gui-course/React.js/development/frontend/src/views/Event.js"],"names":["React","useState","TextInput","dateToString","Button","TimeInput","axios","Event","props","defaultTime","Date","setHours","descirption","setDescription","time","setTime","onSubmit","e","preventDefault","console","log","getHours","getMinutes","addNewEvent","reqUrl","data","Year","currDate","getFullYear","Month","getMonth","Day","getDate","Hours","Minutes","Description","dataToSend","post","then","switchView"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport TextInput from '../components/TextInput';\nimport { dateToString } from '../utils';\nimport Button from '../components/Button';\nimport TimeInput from '../components/TimeInput';\nimport axios from 'axios';\n\nconst Event = (props) => {\n    const defaultTime = new Date();\n    defaultTime.setHours(0, 0, 0, 0);\n\n    const [descirption, setDescription] = useState(props.descirption);\n    const [time, setTime] = useState(defaultTime);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log('submit');\n        console.log(time.getHours(), time.getMinutes());\n        console.log(descirption);\n        addNewEvent();\n    };\n\n    const addNewEvent = () => {\n        //int Year, int Month, int Day, int Hours, int Minutes, string Description\n        const reqUrl = `http://localhost:3000/api/addevent`;\n        const data = {\n            Year: currDate.getFullYear(),\n            Month: currDate.getMonth(),\n            Day: currDate.getDate(),\n            Hours: time.getHours(),\n            Minutes: time.getMinutes(),\n            Description: descirption,\n        };\n        const { currDate } = props;\n\n        console.log(dataToSend);\n        axios.post(reqUrl, data).then((data) => {\n            console.log(data);\n            props.switchView('day', currDate);\n        });\n    };\n\n    return (\n        <section className=\"event-view\">\n            <h1 className=\"section-title\">New Event on {dateToString(props.currDate)}</h1>\n            <form className=\"event-view__form\" onSubmit={onSubmit}>\n                <TimeInput label=\"Time: \" onChange={setTime} default={time} />\n                <TextInput onChange={setDescription} label=\"Description: \" />\n\n                <div className=\"event-view__btns\">\n                    <Button type=\"submit\" classTypes={['green']}>\n                        Add\n                    </Button>\n                    <Button\n                        classTypes={['red']}\n                        onClick={() => props.switchView('day', props.currDate)}\n                    >\n                        Cancel\n                    </Button>\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default Event;\n"]},"metadata":{},"sourceType":"module"}