{"ast":null,"code":"var _jsxFileName = \"/home/janek/Desktop/EGUI/gui-course/React.js/development/frontend/src/views/Event.js\";\nimport React, { useState } from 'react';\nimport TextInput from '../components/TextInput';\nimport { dateToString } from '../utils';\nimport Button from '../components/Button';\nimport TimeInput from '../components/TimeInput';\nimport axios from 'axios';\n\nconst Event = props => {\n  const defaultTime = new Date();\n  defaultTime.setHours(0, 0, 0, 0);\n  const [descirption, setDescription] = useState(props.descirption);\n  const [time, setTime] = useState(defaultTime);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (props.isEditing) return updateEvent();\n    addNewEvent();\n  };\n\n  const getFormData = () => {\n    const data = new FormData();\n    const {\n      currDate\n    } = props;\n    data.set('Year', currDate.getFullYear());\n    data.set('Month', currDate.getMonth() + 1);\n    data.set('Day', currDate.getDate());\n    data.set('Hours', time.getHours());\n    data.set('Minutes', time.getMinutes());\n    data.set('Description', descirption);\n    return data;\n  };\n\n  const updateEvent = id => {\n    const reqUrl = `http://localhost:3000/api/updateevent`;\n    const data = getFormData();\n    axios.post(reqUrl, data, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(data => {\n      props.switchView('day', props.currDate);\n    });\n  };\n\n  const addNewEvent = () => {\n    //int Year, int Month, int Day, int Hours, int Minutes, string Description\n    const reqUrl = `http://localhost:3000/api/addevent`;\n    const data = getFormData();\n    axios.post(reqUrl, data, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(data => {\n      props.switchView('day', props.currDate);\n    });\n  };\n\n  const title = props.isEditing ? 'Editing Event' : 'New Event';\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"event-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, title, \" on \", dateToString(props.currDate)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"event-view__form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TimeInput, {\n    label: \"Time: \",\n    onChange: setTime,\n    default: time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    onChange: setDescription,\n    label: \"Description: \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"event-view__btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    classTypes: ['green'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n    classTypes: ['red'],\n    onClick: () => props.switchView('day', props.currDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Cancel\"))));\n};\n\nexport default Event;","map":{"version":3,"sources":["/home/janek/Desktop/EGUI/gui-course/React.js/development/frontend/src/views/Event.js"],"names":["React","useState","TextInput","dateToString","Button","TimeInput","axios","Event","props","defaultTime","Date","setHours","descirption","setDescription","time","setTime","onSubmit","e","preventDefault","isEditing","updateEvent","addNewEvent","getFormData","data","FormData","currDate","set","getFullYear","getMonth","getDate","getHours","getMinutes","id","reqUrl","post","headers","then","switchView","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport TextInput from '../components/TextInput';\nimport { dateToString } from '../utils';\nimport Button from '../components/Button';\nimport TimeInput from '../components/TimeInput';\nimport axios from 'axios';\n\nconst Event = (props) => {\n    const defaultTime = new Date();\n    defaultTime.setHours(0, 0, 0, 0);\n\n    const [descirption, setDescription] = useState(props.descirption);\n    const [time, setTime] = useState(defaultTime);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (props.isEditing) return updateEvent();\n        addNewEvent();\n    };\n\n    const getFormData = () => {\n        const data = new FormData();\n        const { currDate } = props;\n        data.set('Year', currDate.getFullYear());\n        data.set('Month', currDate.getMonth() + 1);\n        data.set('Day', currDate.getDate());\n        data.set('Hours', time.getHours());\n        data.set('Minutes', time.getMinutes());\n        data.set('Description', descirption);\n        return data;\n    };\n\n    const updateEvent = (id) => {\n        const reqUrl = `http://localhost:3000/api/updateevent`;\n        const data = getFormData();\n        axios\n            .post(reqUrl, data, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            })\n            .then((data) => {\n                props.switchView('day', props.currDate);\n            });\n    };\n\n    const addNewEvent = () => {\n        //int Year, int Month, int Day, int Hours, int Minutes, string Description\n        const reqUrl = `http://localhost:3000/api/addevent`;\n        const data = getFormData();\n        axios\n            .post(reqUrl, data, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            })\n            .then((data) => {\n                props.switchView('day', props.currDate);\n            });\n    };\n\n    const title = props.isEditing ? 'Editing Event' : 'New Event';\n\n    return (\n        <section className=\"event-view\">\n            <h1 className=\"section-title\">\n                {title} on {dateToString(props.currDate)}\n            </h1>\n            <form className=\"event-view__form\" onSubmit={onSubmit}>\n                <TimeInput label=\"Time: \" onChange={setTime} default={time} />\n                <TextInput onChange={setDescription} label=\"Description: \" />\n\n                <div className=\"event-view__btns\">\n                    <Button type=\"submit\" classTypes={['green']}>\n                        Add\n                    </Button>\n                    <Button\n                        classTypes={['red']}\n                        onClick={() => props.switchView('day', props.currDate)}\n                    >\n                        Cancel\n                    </Button>\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default Event;\n"]},"metadata":{},"sourceType":"module"}