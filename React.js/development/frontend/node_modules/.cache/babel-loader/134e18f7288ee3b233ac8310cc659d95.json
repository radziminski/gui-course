{"ast":null,"code":"var _jsxFileName = \"/home/janek/Desktop/EGUI/lab3/calendar/src/components/Calendar.js\";\nimport React, { Component } from 'react';\nconst MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport class Calendar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currDate: new Date(),\n      daysWithEvents: []\n    };\n\n    this.getMonthStringFromDate = date => {\n      return MONTH_NAMES[date.getMonth()];\n    };\n\n    this.generateDays = date => {\n      const days = [];\n      const currDate = new Date(this.state.currDate);\n      currDate.setDate(1); // Starting from some days from previous month:\n\n      while (currDate.getDay() !== 1) currDate.setDate(currDate.getDate() - 1); // Generating the days:\n\n\n      const daysRows = 6;\n      const daysInWeek = 7;\n      let dayCounter = 0;\n\n      while (dayCounter < daysRows * daysInWeek) {\n        days.push({\n          date: currDate.getDate(),\n          active: currDate.getMonth() === this.state.currDate.getMonth()\n        });\n        currDate.setDate(currDate.getDate() + 1);\n        dayCounter++;\n      }\n\n      return days;\n    };\n\n    this.onDayClicked = e => {\n      console.log(e.target.innerText);\n      console.log(e.target.classList.length);\n    };\n\n    this.nextMonth = () => {\n      this.setState({\n        currDate: currDate.setMonth(currDate.getMonth() + 1)\n      });\n    };\n\n    this.prevMonth = () => {\n      this.setState({\n        currDate: currDate.setMonth(currDate.getMonth() - 1)\n      });\n    };\n  }\n\n  render() {\n    const days = this.generateDays(this.state.currDate).map(({\n      date,\n      active\n    }, i) => /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: `calendar__day ${!active ? 'calendar__day--ghost' : ''}`,\n      onClick: this.onDayClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, date));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"L\"), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"calendar__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, this.getMonthStringFromDate(this.state.currDate)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"R\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__days-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, days));\n  }\n\n}\nexport default Calendar;","map":{"version":3,"sources":["/home/janek/Desktop/EGUI/lab3/calendar/src/components/Calendar.js"],"names":["React","Component","MONTH_NAMES","Calendar","state","currDate","Date","daysWithEvents","getMonthStringFromDate","date","getMonth","generateDays","days","setDate","getDay","getDate","daysRows","daysInWeek","dayCounter","push","active","onDayClicked","e","console","log","target","innerText","classList","length","nextMonth","setState","setMonth","prevMonth","render","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst MONTH_NAMES = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n];\n\nexport class Calendar extends Component {\n    state = {\n        currDate: new Date(),\n        daysWithEvents: [],\n    };\n\n    getMonthStringFromDate = (date) => {\n        return MONTH_NAMES[date.getMonth()];\n    };\n\n    generateDays = (date) => {\n        const days = [];\n        const currDate = new Date(this.state.currDate);\n        currDate.setDate(1);\n        // Starting from some days from previous month:\n        while (currDate.getDay() !== 1) currDate.setDate(currDate.getDate() - 1);\n\n        // Generating the days:\n        const daysRows = 6;\n        const daysInWeek = 7;\n\n        let dayCounter = 0;\n        while (dayCounter < daysRows * daysInWeek) {\n            days.push({\n                date: currDate.getDate(),\n                active: currDate.getMonth() === this.state.currDate.getMonth(),\n            });\n            currDate.setDate(currDate.getDate() + 1);\n            dayCounter++;\n        }\n        return days;\n    };\n\n    onDayClicked = (e) => {\n        console.log(e.target.innerText);\n\n        console.log(e.target.classList.length);\n    };\n\n    nextMonth = () => {\n        this.setState({ currDate: currDate.setMonth(currDate.getMonth() + 1) });\n    };\n\n    prevMonth = () => {\n        this.setState({ currDate: currDate.setMonth(currDate.getMonth() - 1) });\n    };\n\n    render() {\n        const days = this.generateDays(this.state.currDate).map(({ date, active }, i) => (\n            <div\n                key={i}\n                className={`calendar__day ${!active ? 'calendar__day--ghost' : ''}`}\n                onClick={this.onDayClicked}\n            >\n                {date}\n            </div>\n        ));\n\n        return (\n            <div className=\"calendar\">\n                <div className=\"calendar__navbar\">\n                    <div className=\"calendar__arrow\">L</div>\n                    <h1 className=\"calendar__title\">\n                        {this.getMonthStringFromDate(this.state.currDate)}\n                    </h1>\n                    <div className=\"calendar__arrow\">R</div>\n                </div>\n                <div className=\"calendar__days-box\">{days}</div>\n            </div>\n        );\n    }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}